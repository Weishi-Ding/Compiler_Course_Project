class Animal {
    public static void bark1() {
        print("Static Animal bark");
    }
    private int offset;
    int age;
    double size;
    int a;
    static int f1;
    static int f2;
    constructor Animal() {}
    constructor Animal(int age, int offset) {}

    int sum(Animal self, int x) {
        int a : = x + self.offset;
        return a;
    }
    
    void bark(Animal self) {
        print("Nonstatic Animal bark");
    }
    
}

class Cat extends Animal {
    constructor Cat(){

    }
    void bark(Cat self) {
        print("Cat miao");
    }
    void class_name(Cat self) {
        print("My class is Cat");
    }
    void eat(Cat self) {
        print("Cats eat fish");
    }
    int num(Cat self, int x) {
        print(x);
        return x + 2;
    }
}

interface basic {
    void class_name();
    void eat();
    int num(int x);
}

int main() {

    Animal ob2 : = new Animal(87,100);
    Animal ob3 : = new Animal();
    int[] arr1 : = new int[5];
    Animal[] arr : = new Animal[3];
    arr[2] : = ob2;
    Animal a : = arr[2];
    a.bark();
    Animal.bark1();
    print(ob2 == ob3);
}
